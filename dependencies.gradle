ext {

    //Android
    buildToolsVersion = "29.0.2"
    kotlinVersion = '1.3.72'
    minSdkVersion = 23
    targetSdkVersion = 30
    compileSdkVersion = 30

    //Libraries
    rxJavaVersion = '2.0.2'
    javaxAnnotationVersion = '1.0'
    javaxInjectVersion = '1'
    rxKotlinVersion = '2.1.0'
    rxAndroidVersion = '2.0.1'
    androidAnnotationsVersion = '21.0.3'
    gsonVersion = '2.8.1'
    okHttpVersion = '4.2.1'
    retrofitVersion = '2.3.0'
    supportLibraryVersion = '26.1.0'
    timberVersion = '4.5.1'
    glideVersion = '4.0.0'
    daggerVersion = '2.21'
    glassfishAnnotationVersion = '10.0-b28'
    archCompVersion = '1.1.1'
    roomVersion = '2.3.0-alpha02'
    lifecycleVersion = '2.0.0'
    navVersion = '2.2.1'
    recyclerViewVersion = '1.2.0-alpha04'
    cardViewVersion = '1.0.0'
    materialVersion = '1.2.0-alpha05'
    appCompactVersion = '1.2.0-beta01'
    constraintLayoutVersion = '2.0.0-beta6'
    shimmerVersion = '0.4.0'
    androidxLegacyVersion = '1.0.0-beta01'
    hilt_version = "2.28-alpha"
    hilt_compiler_version = "1.0.0-alpha01"

    //Testing
    jUnitVersion = '4.13'
    assertJVersion = '3.8.0'
    mockitoKotlinVersion = '1.5.0'
    espressoVersion = '3.1.0'
    robolectricVersion = '3.4.2'
    mockitoVersion = '2.8.9'
    androidSupportRunnerVersion = '1.0.0'
    androidSupportRulesVersion = '1.0.0'
    dexmakerMockitoversion = '2.2.0'
    runnerVersion = '1.1.0'
    assertionVersion = '1.0.0'
    androidXTestCoreVersion = '1.0.0'
    androidXTestCoreKtVersion = '1.1.0'
    googleTruthVersion = '0.42'
    fragmentVersion = "1.3.0-alpha06"

    domainDependencies = [
            kotlin:             "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlinVersion}",
            kotlinreflect: "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version",
            javaxAnnotation:    "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject:        "javax.inject:javax.inject:${javaxInjectVersion}",
            rxKotlin:           "io.reactivex.rxjava2:rxjava:${rxKotlinVersion}",
    ]

    domainTestDependencies = [
            junit:              "junit:junit:${jUnitVersion}",
            mockito:            "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
            assertj:            "org.assertj:assertj-core:${assertJVersion}"
    ]

    dataDependencies = [
            rxKotlin:           "io.reactivex.rxjava2:rxjava:${rxKotlinVersion}",
            kotlin:             "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlinVersion}",
            kotlinreflect: "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version",
            javaxAnnotation:    "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject:        "javax.inject:javax.inject:${javaxInjectVersion}",
    ]

    dataTestDependencies = [
            junit:              "junit:junit:${jUnitVersion}",
            kotlinJUnit:        "org.jetbrains.kotlin:kotlin-test-junit:${kotlinVersion}",
            assertj:            "org.assertj:assertj-core:${assertJVersion}",
            mockito:            "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
            robolectric:        "org.robolectric:robolectric:${robolectricVersion}"
    ]

    cacheDependencies = [
            rxKotlin:           "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            kotlin:             "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlinVersion}",
            kotlinreflect: "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version",
            javaxAnnotation:    "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject:        "javax.inject:javax.inject:${javaxInjectVersion}",
            androidAnnotations: "com.android.support:support-annotations:${androidAnnotationsVersion}",
            roomRuntime:        "androidx.room:room-runtime:${roomVersion}",
            roomCompiler:       "androidx.room:room-compiler:${roomVersion}",
            roomRxJava:         "androidx.room:room-rxjava2:${roomVersion}"
    ]

    cacheTestDependencies = [
            junit:              "junit:junit:${jUnitVersion}",
            kotlinJUnit:        "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
            robolectric:        "org.robolectric:robolectric:${robolectricVersion}",
            assertj:            "org.assertj:assertj-core:${assertJVersion}",
            mockito:            "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
            roomTesting:        "android.arch.persistence.room:testing:${roomVersion}",
            archTesting:        "android.arch.core:core-testing:${archCompVersion}",
            supportRunner:      "com.android.support.test:runner:${androidSupportRunnerVersion}",
            supportRules:       "com.android.support.test:rules:${androidSupportRulesVersion}"
    ]

    remoteDependencies = [
            gson:               "com.google.code.gson:gson:${gsonVersion}",
            rxKotlin:           "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            kotlin:             "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlinVersion}",
            kotlinreflect: "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version",
            javaxAnnotation:    "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject:        "javax.inject:javax.inject:${javaxInjectVersion}",
            androidAnnotations: "com.android.support:support-annotations:${androidAnnotationsVersion}",
            okHttp:             "com.squareup.okhttp3:okhttp:${okHttpVersion}",
            okHttpLogger:       "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}",
            retrofit:           "com.squareup.retrofit2:retrofit:${retrofitVersion}",
            retrofitConverter:  "com.squareup.retrofit2:converter-gson:${retrofitVersion}",
            retrofitAdapter:    "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}",
            jsonConverter:      "com.squareup.retrofit2:converter-gson:${retrofitVersion}",
    ]

    remoteTestDependencies = [
            junit:              "junit:junit:${jUnitVersion}",
            kotlinJUnit:        "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
            assertj:            "org.assertj:assertj-core:${assertJVersion}",
            mockito:            "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}"
    ]

    presentationDependencies = [
            rxJava:             "io.reactivex.rxjava2:rxjava:${rxJavaVersion}",
            kotlin:             "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlinVersion}",
            kotlinreflect: "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version",
            rxAndroid:          "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}",
            javaxAnnotation:    "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject:        "javax.inject:javax.inject:${javaxInjectVersion}",
            navigationFragment: "androidx.navigation:navigation-fragment-ktx:$navVersion",
            androidAnnotations: "com.android.support:support-annotations:${androidAnnotationsVersion}",
            archRuntime:        "android.arch.lifecycle:runtime:${archCompVersion}",
            archExtensions:     "android.arch.lifecycle:extensions:${archCompVersion}",
            archCompiler:       "android.arch.lifecycle:compiler:${archCompVersion}",
            hiltAndroid: "com.google.dagger:hilt-android:$hilt_version",
            hiltAndroidCompiler: "com.google.dagger:hilt-android-compiler:$hilt_version",
            hiltLifecycleViewmodel: "androidx.hilt:hilt-lifecycle-viewmodel:$hilt_compiler_version",
            hiltCompiler: "androidx.hilt:hilt-compiler:$hilt_compiler_version"
    ]

    presentationTestDependencies = [
            junit:              "junit:junit:${jUnitVersion}",
            kotlinJUnit:        "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
            assertj:            "org.assertj:assertj-core:${assertJVersion}",
            mockito:            "com.nhaarman:mockito-kotlin:${mockitoKotlinVersion}",
            robolectric:        "org.robolectric:robolectric:${robolectricVersion}",
            archTesting:        "android.arch.core:core-testing:${archCompVersion}",
    ]

    mobileUiDependencies = [
            okHttp:             "com.squareup.okhttp3:okhttp:${okHttpVersion}",
            gson:               "com.google.code.gson:gson:${gsonVersion}",
            rxKotlin:           "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            rxAndroid:          "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}",
            kotlin:             "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlinVersion}",
            kotlinreflect:      "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version",
            javaxAnnotation:    "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject:        "javax.inject:javax.inject:${javaxInjectVersion}",
            timber:             "com.jakewharton.timber:timber:${timberVersion}",
            glassfishAnnotation: "org.glassfish:javax.annotation:${glassfishAnnotationVersion}",
            roomRuntime:        "android.arch.persistence.room:runtime:${archCompVersion}",
            roomCompiler:       "android.arch.persistence.room:compiler:${archCompVersion}",
            roomRxJava:         "android.arch.persistence.room:rxjava2:${archCompVersion}",
            lifecycleRuntime: "android.arch.lifecycle:runtime:$lifecycleVersion",
            lifecycleExtensions: "android.arch.lifecycle:extensions:$lifecycleVersion",
            lifecycleCompiler: "android.arch.lifecycle:compiler:$lifecycleVersion",
            lifecyleViewModel: "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion",
            androidxLegacy: "androidx.legacy:legacy-support-v4:$androidxLegacyVersion",
            navigationFragment: "androidx.navigation:navigation-fragment-ktx:$navVersion",
            navigationUi: "androidx.navigation:navigation-ui-ktx:$navVersion",
            recylerView: "androidx.recyclerview:recyclerview:$recyclerViewVersion",
            materialLibrary: "com.google.android.material:material:$materialVersion",
            cardView: "androidx.cardview:cardview:$cardViewVersion",
            appCompact: "androidx.appcompat:appcompat:$appCompactVersion",
            constraintLayout: "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion",
            shimmer: "com.facebook.shimmer:shimmer:${shimmerVersion}",
            hiltAndroid: "com.google.dagger:hilt-android:$hilt_version",
            hiltAndroidCompiler: "com.google.dagger:hilt-android-compiler:$hilt_version",
            hiltLifecycleViewmodel: "androidx.hilt:hilt-lifecycle-viewmodel:$hilt_compiler_version",
            hiltCompiler: "androidx.hilt:hilt-compiler:$hilt_compiler_version"
    ]

    mobileUiTestDependencies = [
            junit:              "junit:junit:${jUnitVersion}",
            kotlinJUnit:        "org.jetbrains.kotlin:kotlin-test-junit:${kotlin_version}",
            assertj:            "org.assertj:assertj-core:${assertJVersion}",
            espressoCore:       "androidx.test.espresso:espresso-core:${espressoVersion}",
            espressoIntents:    "androidx.test.espresso:espresso-intents:${espressoVersion}",
            espressoContrib:    "androidx.test.espresso:espresso-contrib:${espressoVersion}",
            espressoAccessiblity:    "androidx.test.espresso:espresso-accessibility:${espressoVersion}",
            expressonIdlingConcurrent: "androidx.test.espresso.idling:idling-concurrent:${espressoVersion}",
            expressonIdlingResource: "androidx.test.espresso:espresso-idling-resource:${espressoVersion}",
            androidRunner:      "androidx.test:runner:${runnerVersion}",
            androidRules:       "androidx.test:rules:${runnerVersion}",
            androidAssertionJunit: "androidx.test.ext:junit:${assertionVersion}",
            androidAssertionTruth: "androidx.test.ext:truth:${assertionVersion}",
            googleAssertionTruth: "com.google.truth:truth:${googleTruthVersion}",
            androidxTestCore: "androidx.test:core:${androidXTestCoreVersion}",
            androidxTestCoreKt: "androidx.test:core-ktx:${androidXTestCoreKtVersion}",
            hiltAndroidTest:  "com.google.dagger:hilt-android-testing:${hilt_version}",
            hiltAndroidCompiler: "com.google.dagger:hilt-android-compiler:${hilt_version}",
            mockitoAndroid: "org.mockito:mockito-android:${mockitoVersion}",
            mockitoCore: "org.mockito:mockito-core:${mockitoVersion}",
            fragmentTesting: "androidx.fragment:fragment-testing:${fragmentVersion}"
    ]
}